package co.test.hulk.store.controller;

import javax.persistence.EntityManager;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.List;

import ch.qos.logback.core.status.Status;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;

import co.test.hulk.store.config.JDBCConfig;
import co.test.hulk.store.model.Comic;
import co.test.hulk.store.repository.ComicRepository;
import static org.mockito.Mockito.when;
import static org.hamcrest.CoreMatchers.is;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;

@ContextConfiguration(locations = { "classpath:application.properties" })
@RunWith(SpringRunner.class)
@AutoConfigureMockMvc
public class ComicControllerTest {
	
	@MockBean
	private ComicRepository comicRepository;

	@MockBean
	private EntityManager em;
	
	@Autowired
	private MockMvc mvc;
	

	@Test
	public void testGetAllComics() throws Exception {
		
		List<Comic> array = new ArrayList<Comic>();
		
		Comic comic = new Comic();
		array.add(comic);
		
//		when(comicRepository.findAll()).thenReturn(array);
		mvc.perform(get("/api/v1/comics").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk());		
	}

	@Test
	public void testGetComicById() {
	}

	@Test
	public void testCreateComic() {
	}

	@Test
	public void testUpdateComic() {
		
	}

	@Test
	public void testDeleteComic() {
	}

}
